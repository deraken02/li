# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build li
        run: make && cd tests

      - name: Error verification
        run: |
          cp tests/error_test.sh .
          ./li 1>stdout 2>error
          ./error_test.sh

      - name: Try to write in the file
        run: ./tests/write_test.sh

      - name: Compile script of test to replace charactere
        run: |
          rm tester
          gcc tests/replace_test.c

      - name: Try to write in the file
        run: ./a.out | ./li tester

      - name: Verify the result
        run: |
          cp tests/replace_test.sh .
          ./replace_test.sh

      - name: Compile script of test 1 erase charactere
        run: |
          rm tester
          gcc tests/erase_test1.c

      - name: Try to write in the file
        run: ./a.out | ./li tester

      - name: Verify the result
        run: |
          cp tests/erase_test.sh .
          ./erase_test.sh

      - name: Compile script of test 2 erase charactere
        run: |
          rm tester
          gcc tests/erase_test2.c

      - name: Try to write in the file
        run: ./a.out | ./li tester

      - name: Verify the result
        run: |
          cp tests/erase_test.sh .
          ./erase_test.sh

      - name: Compile script of test to append
        run: |
          gcc tests/append_test.c

      - name: Try to append in the file
        run: ./a.out | ./li tester

      - name: Verify the result 
        run: |
            cp tests/append_test.sh .
            ./append_tests.sh

      - name: Compile script of test to replace in the up line
        run: |
          cp tests/replace_up_test.c .
          gcc replace_up_test.c

      - name: Try to replace the up line in the file
        run: ./a.out | ./li tester

      - name: Verify the results
        run: |
          cp test/replace_up_test.sh .
          ./replace_up_test.sh

      - name: Cleanup
        run: rm -f *.c *.sh tester a.out stdout error
